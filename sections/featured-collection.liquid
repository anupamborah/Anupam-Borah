{% comment %}
  Featured Products (6) Section
  - Responsive grid (1 col mobile, 2 col tablet, desktop controlled by settings)
  - Fetches full product objects via all_products
  - Vanilla JS only (no jQuery)
  - Well-commented for maintainability
{% endcomment %}

<section id="featured-products-{{ section.id }}" class="featured-products-section">
  <div class="page-width">
    {%- if section.settings.title != blank -%}
      <h2 class="section-title">{{ section.settings.title | escape }}</h2>
    {%- endif -%}

    <ul id="Grid-{{ section.id }}" class="product-grid">
      {%- for i in (1..6) -%}
        {%- assign setting_id = 'product_' | append: i -%}
        {%- assign product_handle = section.settings[setting_id] -%}
        {%- assign product = all_products[product_handle] -%}
        {%- if product != blank -%}
          <li class="grid-item">
            {%- render 'card-product',
              card_product: product,
              media_aspect_ratio: 'square',
              show_secondary_image: true,
              show_vendor: false,
              show_rating: false
            -%}
          </li>
        {%- endif -%}
      {%- endfor -%}
    </ul>
  </div>
</section>

{%- style -%}
  /* Section wrapper */
  .featured-products-section {
    padding: 40px 20px;
  }

  .featured-products-section .section-title {
    text-align: center;
    margin-bottom: 30px;
    font-size: 2rem;
    font-weight: bold;
  }

  /* Grid base */
  #Grid-{{ section.id }} {
    display: grid;
    grid-template-columns: 1fr; /* Mobile default */
    gap: 20px;
    list-style: none; /* Remove bullets */
    padding: 0;
    margin: 0;
  }

  /* Tablet (>=600px): 2 columns */
  @media screen and (min-width: 600px) {
    #Grid-{{ section.id }} {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  /* Desktop (>=990px): controlled by classes */
  @media screen and (min-width: 990px) {
    #Grid-{{ section.id }}.grid--2-col-desktop {
      grid-template-columns: repeat(2, 1fr);
    }
    #Grid-{{ section.id }}.grid--3-col-desktop {
      grid-template-columns: repeat(3, 1fr);
    }
    #Grid-{{ section.id }}.grid--6-col-desktop {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  /* Ensure each item stretches nicely */
  #Grid-{{ section.id }} .grid-item {
    display: block;
    width: 100%;
  }
{%- endstyle -%}

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Select grid element
    const grid = document.getElementById("Grid-{{ section.id }}");

    if (grid) {
      // Remove any old desktop classes
      grid.classList.remove("grid--2-col-desktop", "grid--3-col-desktop", "grid--6-col-desktop");

      // Apply the one selected in schema
      const desktopCols = "{{ section.settings.columns_desktop }}";
      grid.classList.add(`grid--${desktopCols}-col-desktop`);
    }
  });
</script>

{% schema %}
{
  "name": "Featured 6",
  "tag": "section",
  "class": "section",
  "disabled_on": { "groups": ["header", "footer"] },
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Section title",
      "default": "Featured Products"
    },
    {
      "type": "select",
      "id": "columns_desktop",
      "label": "Desktop columns",
      "default": "3",
      "options": [
        { "value": "2", "label": "2 columns" },
        { "value": "3", "label": "3 columns" },
        { "value": "6", "label": "6 columns" }
      ]
    },
    { "type": "product", "id": "product_1", "label": "Product 1" },
    { "type": "product", "id": "product_2", "label": "Product 2" },
    { "type": "product", "id": "product_3", "label": "Product 3" },
    { "type": "product", "id": "product_4", "label": "Product 4" },
    { "type": "product", "id": "product_5", "label": "Product 5" },
    { "type": "product", "id": "product_6", "label": "Product 6" }
  ],
  "presets": [
    { "name": "Featured 6" }
  ]
}
{% endschema %}