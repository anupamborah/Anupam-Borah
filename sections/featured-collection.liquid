<section id="featured-products-{{ section.id }}" class="featured-products-section">
  <div class="page-width">
    {% if section.settings.title != blank %}
      <h2 class="section-title">{{ section.settings.title | escape }}</h2>
    {% endif %}

    <ul id="Grid-{{ section.id }}" class="product-grid">
      {% for i in (1..6) %}
        {% assign setting_id = 'product_' | append: i %}
        {% assign product_handle = section.settings[setting_id] %}
        {% assign product = all_products[product_handle] %}
        {% if product %}
          {% assign featured_image = product.featured_image | default: product.images.first %}
          <li class="grid-item">
            {% if featured_image %}
              <img 
                src="{{ featured_image | img_url: '400x400' }}" 
                alt="{{ product.title | escape }}" 
                style="width: 100%; height: 300px; object-fit: contain;" 
                loading="lazy" />
            {% else %}
              <img 
                src="https://via.placeholder.com/400x400?text=No+Image" 
                alt="No image available" 
                style="width: 100%; height: 300px; object-fit: contain;" />
            {% endif %}

            <!-- Product details container visible only on mobile -->
            <div class="product-details">
              <h3>{{ product.title }}</h3>
              <p>{{ product.price | money }}</p>
            </div>
          </li>
        {% endif %}
      {% endfor %}
    </ul>
  </div>
</section>

<style>
  /* Section padding */
  .featured-products-section {
    padding: 40px 20px;
  }

  /* Title style */
  .featured-products-section .section-title {
    text-align: center;
    margin-bottom: 30px;
    font-size: 2rem;
    font-weight: bold;
  }

  /* Product grid default two columns */
  #Grid-{{ section.id }} {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 15px;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  /* Desktop specific column control */
  @media screen and (min-width: 990px) {
    #Grid-{{ section.id }}.grid--2-col-desktop {
      grid-template-columns: repeat(2, 1fr);
    }
    #Grid-{{ section.id }}.grid--3-col-desktop {
      grid-template-columns: repeat(3, 1fr);
    }
    #Grid-{{ section.id }}.grid--6-col-desktop {
      grid-template-columns: repeat(6, 1fr);
    }
  }

  /* Grid item reset */
  #Grid-{{ section.id }} .grid-item {
    width: 100%;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  /* Image style */
  #Grid-{{ section.id }} .grid-item img {
    display: block;
    border: none;
    box-shadow: none;
  }

  /* Product details container styling */
  #Grid-{{ section.id }} .product-details {
    margin-top: 8px;
  }
  #Grid-{{ section.id }} .product-details h3 {
    margin: 5px 0 2px;
    font-size: 1.1rem;
  }
  #Grid-{{ section.id }} .product-details p {
    margin: 0;
    font-weight: 600;
  }

  /* MOBILE VIEW */
  @media screen and (max-width: 989px) {
    /* Show product details in mobile */
    #Grid-{{ section.id }} .product-details {
      display: block;
    }

    /* Grid with 2 columns for two products per row as requested */
    #Grid-{{ section.id }} {
      grid-template-columns: repeat(2, 1fr);
      gap: 10px;
      max-width: 600px; /* Optional max width for better mobile sizing */
      margin: 0 auto;
    }

    /* Limit to 3 rows: show only first 6 products if more exist (optional) */
    #Grid-{{ section.id }} li.grid-item:nth-child(n+7) {
      display: none;
    }
  }

  /* DESKTOP VIEW */
  @media screen and (min-width: 990px) {
    /* Hide product details on desktop */
    #Grid-{{ section.id }} .product-details {
      display: none;
    }

    /* Desktop columns handled by JS class */
  }
</style>

<script>
  // Vanilla JS for assigning desktop columns class dynamically
  document.addEventListener("DOMContentLoaded", function () {
    const grid = document.getElementById("Grid-{{ section.id }}");
    if (grid) {
      // Clear existing grid column classes
      grid.classList.remove("grid--2-col-desktop", "grid--3-col-desktop", "grid--6-col-desktop");
      // Add the selected desktop columns class
      const columns = "{{ section.settings.columns_desktop }}";
      grid.classList.add(`grid--${columns}-col-desktop`);
    }
  });
</script>

{% schema %}
{
  "name": "Featured 6",
  "settings": [
    { "type": "text", "id": "title", "label": "Section title", "default": "Featured Products" },
    {
      "type": "select",
      "id": "columns_desktop",
      "label": "Desktop columns",
      "default": "3",
      "options": [
        { "value": "2", "label": "2 columns" },
        { "value": "3", "label": "3 columns" },
        { "value": "6", "label": "6 columns" }
      ]
    },
    { "type": "product", "id": "product_1", "label": "Product 1" },
    { "type": "product", "id": "product_2", "label": "Product 2" },
    { "type": "product", "id": "product_3", "label": "Product 3" },
    { "type": "product", "id": "product_4", "label": "Product 4" },
    { "type": "product", "id": "product_5", "label": "Product 5" },
    { "type": "product", "id": "product_6", "label": "Product 6" }
  ],
  "presets": [{ "name": "Featured 6" }]
}
{% endschema %}
